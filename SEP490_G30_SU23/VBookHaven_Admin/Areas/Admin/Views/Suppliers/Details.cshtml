@model VBookHaven.Models.ViewModels.SupplierDetailsVM

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<!--page-wrapper-->
<div class="page-wrapper">
    <!--page-content-wrapper-->
    <div class="page-content-wrapper">
        <div class="page-content">
            <!--breadcrumb-->
            <div class="page-breadcrumb d-none d-sm-flex align-items-center mb-3">
                <div class="breadcrumb-title pe-3">Nhà cung cấp</div>
                <div class="ps-3">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0 p-0">
                            <li class="breadcrumb-item">
                                <a href="javascript:;">
                                    <i class="bx bx-home-alt"></i>
                                </a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">Quản lý nhà cung cấp</li>
                        </ol>
                    </nav>
                </div>
            </div>
            <!--end breadcrumb-->
            <div class="card">
                <div class="card-body">
                    <div class="card-title">
                        <h4 class="mb-0">Danh sách nhà cung cấp</h4>
                    </div>
                    <hr />
                    <div>
                        <h4>Supplier</h4>
                        <hr />
                        <dl class="row">
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.Address)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.Address)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.SupplierName)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.SupplierName)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.Phone)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.Phone)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.Status)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.Status)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.Description)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.Description)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.Email)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.Email)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.ProvinceCode)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.ProvinceCode)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.Province)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.Province)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.DistrictCode)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.DistrictCode)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.District)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.District)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.WardCode)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.WardCode)
                            </dd>
                            <dt class="col-sm-2">
                                @Html.DisplayNameFor(model => model.Supplier.Ward)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Supplier.Ward)
                            </dd>
                        </dl>
                    </div>
                    <div>
                        <h4>Supplier</h4>
                        <hr />
                        @foreach (var product in Model.SupplierProducts)
                        {
                            <dl class="row">
                                <dt class="col-sm-2">
                                    ProductName
                                </dt>
                                <dd class="col-sm-10">
                                    @product.Name
                                </dd>
                                <dt class="col-sm-2">
                                    Image
                                </dt>
                                <dd class="col-sm-10">
                                    @product.Images.FirstOrDefault().ImageName;
                                </dd>
                            </dl>
                        }

                    </div>
                    <div>
                        <a asp-action="Edit" asp-route-id="@Model.Supplier.SupplierId">Edit</a> |
                        <a asp-action="Index">Back to List</a>
                    </div>

                </div>
            </div>
        </div>
        <!--end page-content-wrapper-->
    </div>
    <!--end page-wrapper-->

</div>
<!-- end wrapper -->
@section Scripts {
    <script>
        $(document).ready(function () {
            var table = $('#example2').DataTable({});
            table.buttons().container().appendTo('#example2_wrapper .col-md-6:eq(0)');
        });
        var fromDate;
        var toDate;

        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0');
        var yyyy = today.getFullYear();
        toDate = yyyy + '-' + mm + '-' + dd;
        document.getElementById("to").value = toDate;

        document.getElementById("from").addEventListener("change", function () {
            fromDate = this.value;
            toDate = document.getElementById("to").value;
            if (toDate != "" && fromDate > toDate) {
                document.getElementById("to").value = fromDate;
                document.getElementById("from").value = toDate;
            }
        });
        document.getElementById("to").addEventListener("change", function () {
            toDate = this.value;
            fromDate = document.getElementById("from").value;
            if (fromDate != "" && fromDate > toDate) {
                document.getElementById("from").value = toDate;
                document.getElementById("to").value = fromDate;
            }
        });

        $(document).ready(function () {
            $(".filter").on("input", function () {
                var cust = $("#customer").val().toLowerCase();
                var from = $("#from").val();
                var to = $("#to").val();
                var status = $("#status").val();
                if (from > to) {
                    var temp = from
                    from = to
                    to = temp
                }
                console.log("3) From: " + from + " To: " + to)
                $("#myTable tr").filter(function () {
                    $(this).toggle(
                        $(this).find('td:eq(1)').text().toLowerCase().indexOf(cust) > -1 &&
                        $(this).find('td:eq(3) > span').text().indexOf(status) > -1 &&
                        $(this).find('td:eq(2)').text() <= to &&
                        $(this).find('td:eq(2)').text() >= from
                    );
                })
            });
        });
    </script>
}

